<?xml version="1.0"?>
<project name="C5" default="build" basedir=".">
	<description>C5 Generic Collection Library</description>

	<!-- Build Environment Setup -->

	<property name="debug" value="true" overwrite="false" />

	<property name="baseDir" value="${project::get-base-directory()}" />
	<if test="${debug == 'true'}">
		<property name="releaseConfig" value="Debug" />
	</if>
	<if test="${debug == 'false'}">
		<property name="releaseConfig" value="Release" />
	</if>

	<property name="buildDirC5" value="${baseDir}/C5/bin" />
	<property name="buildDirDocNet" value="${baseDir}/docNet/bin" />
	<property name="buildDirNunit" value="${baseDir}/nunit/bin" />
	<property name="buildDirPreProcess" value="${baseDir}/PreProcess/bin" />

	<property name="outputDirC5" value="${buildDirC5}/${releaseConfig}" />
	<property name="outputDirDocNet" value="${buildDirDocNet}/${releaseConfig}" />
	<property name="outputDirNunit" value="${buildDirNunit}/${releaseConfig}" />
	<property name="outputDirPreProcess" value="${buildDirPreProcess}/${releaseConfig}" />

	<!-- NUnit Environment Setup -->

	<property name="nunitBaseDir" value="C:/Program Files/NUnit 2.2.6" />
	<property name="nunit.framework.dll" 
		value="${nunitBaseDir}/bin/nunit.framework.dll" />
	<property name="nunit-console.exe" 
		value="${nunitBaseDir}/bin/nunit-console.exe" />

	<!-- Create output directories -->

	<target name="makedirs">
		<mkdir dir="${outputDirC5}/" />
		<mkdir dir="${outputDirDocNet}/" />
		<mkdir dir="${outputDirNunit}/" />
		<mkdir dir="${outputDirPreProcess}/" />

		<mkdir dir="${baseDir}/docNet/docbuild/types" />
	</target>

	<!-- Clean up output directories -->

	<target name="clean" description="remove all generated files">
		<delete dir="${buildDirC5}" failonerror="false" />
		<delete dir="${buildDirDocNet}" failonerror="false" />
		<delete dir="${buildDirNunit}" failonerror="false" />
		<delete dir="${buildDirPreProcess}" failonerror="false" />

		<delete dir="${baseDir}/docNet/docbuild/types" />
	</target>

	<!-- Run the pre-processing program to generate source code -->

	<target name="preprocess" depends="makedirs">
		<csc target="exe" output="${outputDirPreProcess}/PreProcess.exe" debug="${debug}">
			<sources basedir="${baseDir}/PreProcess">
				<include name="Program.cs" />
			</sources>
		</csc>
		<exec program="${outputDirPreProcess}/PreProcess.exe" workingdir="${outputDirPreProcess}/" />
	</target>

	<!-- Build the C5 library -->

	<target name="build" depends="preprocess">
		<csc target="library" output="${outputDirC5}/C5.dll" debug="${debug}">
			<sources basedir="${baseDir}/C5">
				<include name="arrays/CircularQueue.cs" />
				<include name="arrays/HashedArrayList.cs" />
				<include name="AssemblyInfo.cs"/>
				<include name="Attributes.cs" />
				<include name="Builtin.cs" />
				<include name="Comparer.cs"/>
				<include name="Delegates.cs" />
				<include name="Enums.cs" />
				<include name="Exceptions.cs" />
				<include name="Formatting.cs" />
				<include name="Hashers.cs" />
				<include name="Events.cs" />
				<include name="Collections.cs"/>
				<include name="Dictionaries.cs"/>
				<include name="Interfaces.cs"/>
				<include name="linkedlists/HashedLinkedList.cs" />
				<include name="Random.cs" />
				<include name="Records.cs" />
				<include name="Sorting.cs" />
				<include name="ViewSupport.cs" />
				<include name="MappedEnumerators.cs" />
				<include name="WrappedArray.cs" />
				<include name="Wrappers.cs" />
				<include name="arrays/ArrayList.cs" />
				<include name="arrays/HashedArrayList.cs" />
				<include name="arrays/SortedArray.cs" />
				<include name="hashing/HashBag.cs" />
				<include name="hashing/HashDictionary.cs" />
				<include name="hashing/HashTable.cs" />
				<include name="heaps/IntervalHeap.cs" />
				<include name="linkedlists/HashedLinkedList.cs" />
				<include name="linkedlists/LinkedList.cs" />
				<include name="trees/RedBlackTreeSet.cs" />
				<include name="trees/RedBlackTreeBag.cs" />
				<include name="trees/RedBlackTreeDictionary.cs" />
			</sources>
		</csc>
	</target>

	<!-- Build documentation tool -->

	<target name="docnet" depends="build">
		<csc target="exe" output="${outputDirDocNet}/docNet.exe" debug="${debug}">
			<sources basedir="${baseDir}/docNet">
				<include name="AssemblyInfo.cs" />
				<include name="docnet.cs" />
				<include name="Test.cs" />
				<include name="Timer.cs" />
			</sources>
			<references>
				<include name="${outputDirC5}/C5.dll" />
			</references>
		</csc>

		<copy todir="${outputDirDocNet}/">
			<fileset basedir="${outputDirC5}/">
				<include name="*.*" />
			</fileset>
		</copy>

		<!-- Not running dodoc.cmd here, since it waits for user input.. -->

	</target>

	<!-- Build and run NUnit tests -->

	<target name="test" depends="build">
		<csc target="library" output="${outputDirNunit}/nunit.dll" debug="${debug}">
			<sources basedir="${baseDir}/nunit">
				<include name="PreProcess/Program.cs" />
				<include name="arrays/CircularQueueTest.cs" />
				<include name="AssemblyInfo.cs" />
				<include name="BasesTest.cs" />
				<include name="Records.cs" />
				<include name="Sorting.cs" />
				<include name="SupportClasses.cs" />
				<include name="arrays/ArrayListTest.cs" />
				<include name="arrays/HashedArrayListTest.cs" />
				<include name="arrays/SortedArrayTests.cs" />
				<include name="hashing/HashBagTests.cs" />
				<include name="hashing/HashDictionaryTests.cs" />
				<include name="hashing/HashTableTests.cs" />
				<include name="heaps/HeapTests.cs" />
				<include name="linkedlists/HashedLinkedListTest.cs" />
				<include name="linkedlists/LinkedListTest.cs" />
				<include name="templates/Clone.cs" />
				<include name="templates/Events.cs" />
				<include name="templates/GenericCollectionTester.cs" />
				<include name="templates/List.cs" />
				<include name="trees/Bag.cs" />
				<include name="trees/Dictionary.cs" />
				<include name="trees/RedBlackTreeSetTests.cs" />
				<include name="WrappersTest.cs" />
			</sources>
			<references>
				<include name="${outputDirC5}/C5.dll" />
				<include name="${nunit.framework.dll}" />
			</references>
		</csc>

		<copy todir="${outputDirNunit}/">
			<fileset basedir="${outputDirC5}/">
				<include name="*.*" />
			</fileset>
		</copy>

		<exec program="${nunit-console.exe}" 
			commandline="${outputDirNunit}/nunit.dll /nologo" />
	</target>

</project>
